@page "/subject/{SubjectId:int}/management/assignments/submits/{SubmitId:int}"

@using VxFormGenerator.Core
@using Iwentys.Sdk
@using Iwentys.Endpoints.Sdk.Extensions
@using Microsoft.AspNetCore.Authorization
@inject SubjectAssignmentSubmitClient _subjectAssignmentSubmitClient
@inject NavigationManager _navigationManagerClient
@attribute [Authorize]

<h3>SubjectAssignmentSubmitPage</h3>

@if (_submit is not null)
{
    <div class="d-flex flex-column">
        <span>
            Assignment: @_submit.SubjectAssignmentTitle
        </span>
        
        <span>
            Student: @_submit.Student.GetFullName()
        </span>
        
        <span>
            Description: @_submit.StudentDescription
        </span>
        
        <span>
            Submit time: @_submit.SubmitTimeUtc
        </span>
        
        @switch (_submit.State)
        {
            case SubmitState.Created:
                break;
            case SubmitState.Approved:
                <MatBody2>
                    Approved (@_submit.ApproveTimeUtc)
                </MatBody2>
                <MatBody2>
                    Comment: (@_submit.Comment)
                </MatBody2>
                break;
            case SubmitState.Rejected:
                <MatBody2>
                    Rejected (@_submit.RejectTimeUtc)
                </MatBody2>
                <MatBody2>
                    Comment: (@_submit.Comment)
                </MatBody2>
                break;
            default:
                throw new ArgumentOutOfRangeException(nameof(SubmitState), "Unsupported assignment state");
        }
        
        <div>
            
            <EditForm Model="_arguments">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <RenderFormElements></RenderFormElements>
                <MatButton class="dark-elevation-04" type="submit" OnClick="@(async () => await Create())">Send feedback</MatButton>
            </EditForm> 
        </div>
        <div class="container-fluid d-flex flex-row"></div>
    </div>
}

@code {
    [Parameter]
    public int SubjectId { get; set; }
    [Parameter]
    public int SubmitId { get; set; }
}